@page "/product/{id:int}"
@inject IProductService productService

<h3>ProductDetails</h3>

@if (product == null)
{
    <p><em>@Message</em></p>
}
else
{
    <div class="media">
        <div class="media-img-wrapper me-2">
            <img class="media-img" src="@product.ImageUrl" alt="@product.Title" />
        </div>
        <div class="media-body">
            <h2 class="mb-0">@product.Title</h2>
            <p>@product.Description</p>
            @if (GetSelectedVariant() != null)
            {
                @if (GetSelectedVariant().OriginalPrice > GetSelectedVariant().Price)
                {
                    <h5 class="text-muted original-price">$@GetSelectedVariant().OriginalPrice</h5>
                }
                <h4 class="price">$ @GetSelectedVariant().Price</h4>
            }

        </div>
    </div>
}

@code {
    private Product? product = null;
    string Message = String.Empty;
    private int currentTypeId = 1;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        Message = "Loading.Product Detail..";
        var result = await productService.GetProductAsync(Id);
        if (result.Data != null)
        {

            product = result.Data;
            if (product.Variants.Count > 0)
            {
                currentTypeId = product.Variants[0].ProductTypeId;
            }
        }
        else
            Message = result.Message;
    }

    private ProductVariant GetSelectedVariant()
    {
        var variant = product.Variants.FirstOrDefault(v => v.ProductTypeId == currentTypeId);
        return variant;
    }
}
