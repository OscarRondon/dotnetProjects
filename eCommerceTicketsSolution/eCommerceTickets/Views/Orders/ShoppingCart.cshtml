@model eCommerceTickets.ViewModels.ShoppingCartVM

@{
    ViewData["Title"] = "Shopping cart summary";
}

<div class="row">
    <div class="col-md-8 offset-2">

        <p class="text-center">
            <h4>You shopping cart summary</h4>
        </p>

        <table class="table">
            <thead>
                <tr>
                    <th>Quantity</th>
                    <th>Movie</th>
                    <th>Price</th>
                    <th>Subtotal</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.shoppingCart.ShoppingCartItems)
                {
                    <tr>
                        <td class="align-middle">@item.Quantity</td>
                        <td class="align-middle">@item.Movie.Name</td>
                        <td class="align-middle">@item.Movie.Price.ToString("c")</td>
                        <td class="align-middle">@((@item.Quantity*@item.Movie.Price).ToString("c"))</td>
                        <td class="align-middle">
                            <a class="text-danger" asp-controller="Orders" asp-action="RemoveItemFromShoppingCart" asp-route-id="@item.Movie.Id">
                                <i class="bi bi-trash"></i>Delete
                            </a>
                            |
                            <a class="text-success" asp-controller="Orders" asp-action="AddToShoppingCart" asp-route-id="@item.Movie.Id">
                                <i class="bi bi-plus-circle"></i> Add
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="2"></td>
                    <td>Total</td>
                    <td>@Model.shoppingCartTotal.ToString("c")</td>
                    <td></td>
                </tr>
            </tfoot>
        </table>

        <div class="text-center">
            <div class="btn-group">
                @*<a class="btn btn-outline-primary" asp-action="CompleteOrder">
                        Complete Order
                    </a>*@
                <div id="paypal-btn">

                </div>
                <span style="padding: 5px">|</span>
                <div id="paypal-btn2">

                </div>
                <span style="padding: 5px">|</span>
                <a class="btn btn-outline-success" asp-controller="Movies" asp-action="Index">
                    Add more Items
                </a>
            </div>
        </div>

    </div>
</div>

@section Scripts{

    <!-- https://www.youtube.com/watch?v=qLXDsoYOopU -->
    @*<script src="https://www.paypal.com/sdk/js?client-id=AZx1h8lwkuqNbRGEI4mSgxZExZiNmZUlARCRVCMx8HxcV71B_VWLA5HlI-Gvyn4I1bIJnmw3mX9nlrQq&currency=USD&disable-funding=paylater,bancontact"></script>

    <script>
        let paypal_buttons = paypal.Buttons({
            style: {
                layout: 'vertical',
                color: 'gold',
                shape: 'rect',
                label: 'paypal'
            },

            createOrder() {
                return fetch("/Orders/ShoppingCart", {
                    method: "POST"
                })
                    .then((response) => response.json())
                    .then((order) => order.id);
            }
        });
        paypal_buttons.render('#paypal-btn2');
    </script>*@


    <!-- ******************************************************************************************************************* -->


    <script src="https://www.paypalobjects.com/api/checkout.js"></script>

    <script>

        let _total = @Html.Raw(Model.shoppingCartTotal);

        paypal.Button.render({
            //Configure environment
            env: 'sandbox',
            client: {
                sandbox: 'AZx1h8lwkuqNbRGEI4mSgxZExZiNmZUlARCRVCMx8HxcV71B_VWLA5HlI-Gvyn4I1bIJnmw3mX9nlrQq'
            },

            //Customize button
            locale: 'en_US',
            style: {
                size: 'small',
                color: 'gold',
                shape: 'pill'
            },
            commit: true,

            //Set up a payment
            payment: function (data, actions) {
                return actions.payment.create({
                    transactions: [{
                        amount: {
                            total: _total,
                            currency: 'USD'
                        }
                    }]
                });
            },

            //Execute the payment
            onAuthorize: function (data, actions) {
                return actions.payment.execute().then(function () {
                  var url = '@Url.Action("CompleteOrder", "Orders", new { })';
                    window.location.href = url;
                });
            }

        }, '#paypal-btn')
    </script>


}